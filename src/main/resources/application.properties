spring.jpa.hibernate.ddl-auto=update

/////spring.datasource.url=jdbc:mysql://us-cdbr-iron-east-03.cleardb.net:3306/heroku_e32e746d8d7b1d1?reconnect=true&?useUnicode=true;characterEncoding=utf8&amp;characterSetResults=utf8"
/////spring.datasource.password=9540801a

//localhost = config localhost
#spring.datasource.url=jdbc:mysql://localhost/emergency2?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.username=spring
#spring.datasource.password=123

///spring.datasource.url=jdbc:mysql://jj820qt5lpu6krut.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/hk3z2ij61vn30blb?reconnect=true&?useUnicode=true;characterEncoding=utf8&amp;characterSetResults=utf8
///spring.datasource.username=brp3807rxkiamn4c
///spring.datasource.password=q110kp2x4wjzyund

spring.datasource.url=jdbc:mysql://sql12.freemysqlhosting.net:3306/sql12182217?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=sql12182217
spring.datasource.password=vqG2NiA8Ym

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.init-sql="SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci;"

spring.jpa.show-sql=true
spring.jackson.serialization.fail-on-empty-beans=true

spring.jpa.properties.hibernate.id.new_generator_mappings=false

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


# The SQL dialect makes Hibernate generate better SQL for the chosen database
    spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
    spring.jpa.properties.hibernate.connection.characterEncoding=utf8mb4
    spring.jpa.properties.hibernate.connection.CharSet=utf8mb4
    spring.jpa.properties.hibernate.connection.useUnicode=true

# HTTP message conversion
spring.http.converters.preferred-json-mapper=gson 
# Preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.

spring.thymeleaf.cache: false



#application defined error messsages
id.required=Employee ID is required
name.required=Employee Name is required
role.required=Employee Role is required
negativeValue={0} can't be negative or zero

#Spring framework error messages to be used when conversion from form data to bean fails
typeMismatch.int={0} Value must be an integer
typeMismatch.java.lang.Integer={0} must be an integer
typeMismatch={0} is of invalid format

#application messages for annotations, {ValidationClass}.{modelObjectName}.{field}
#the {0} is field name, other fields are in alphabatical order, max and then min
Size.customer.name=Customer {0} should be between {2} and {1} characters long
NotEmpty.customer.email=Email is a required field
NotNull.customer.age=Customer {0} should be in years

#Generic annotation class messages
Email=Email address is not valid
NotNull=This is a required field
NotEmpty=This is a required field
Past=Date should be Past

#Custom validation annotation
Phone=Invalid format, valid formats are 1234567890, 123-456-7890 x1234