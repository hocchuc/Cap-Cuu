buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
	ext["thymeleaf.version"] = "3.0.2.RELEASE"
	ext["thymeleaf-layout-dialect.version"] = "2.0.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

war {
    baseName = 'WebEmergencySOS'
    version =  '1.0'
}
version = "1.0"
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
    }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.data:spring-data-rest-hal-browser')

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '1.5.4.RELEASE'
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile ("io.github.jpenren:thymeleaf-spring-data-dialect:3.1.1")
	compile('org.springframework.boot:spring-boot-starter-web')
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.5.4.RELEASE'

	compile group: 'com.google.code.gson', name: 'gson', version: '1.7.2'

	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'

	compile 'com.google.firebase:firebase-admin:5.0.0'
	// for firebase intergration
	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	// https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-core
	compile group: 'org.igniterealtime.smack', name: 'smack-core', version: '4.2.0'
	// https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-tcp
	compile group: 'org.igniterealtime.smack', name: 'smack-tcp', version: '4.2.0'
	// https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-extensions
	compile group: 'org.igniterealtime.smack', name: 'smack-extensions', version: '4.2.0'
// https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-java7
	compile group: 'org.igniterealtime.smack', name: 'smack-java7', version:'4.2.0'
	//okhttp for get data from google map api
	compile 'com.squareup.okhttp3:okhttp:3.8.1'
	//Okio is a library that complements java.io and java.nio to make it much easier to access, store, and process your data.
	compile 'com.squareup.okio:okio:1.13.0'



	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.8'
	// https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl
	compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'
	// https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl
	compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.5'

	compile("org.springframework.boot:spring-boot-starter-websocket")
	    compile("org.webjars:webjars-locator")
	    compile("org.webjars:sockjs-client:1.0.2")
	    compile("org.webjars:stomp-websocket:2.3.3")
	    compile("org.webjars:bootstrap:3.3.7")
	    compile("org.webjars:jquery:3.1.0")



}

